/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.h2.tables.records;


import org.jooq.Record2;
import org.jooq.SQLDialect;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.mcve.java.h2.tables.Test;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TestRecord extends UpdatableRecordImpl<TestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>MCVE.TEST.DIALECT1</code>.
     */
    public void setDialect1(SQLDialect value) {
        set(0, value);
    }

    /**
     * Getter for <code>MCVE.TEST.DIALECT1</code>.
     */
    public SQLDialect getDialect1() {
        return (SQLDialect) get(0);
    }

    /**
     * Setter for <code>MCVE.TEST.DIALECT2</code>.
     */
    public void setDialect2(SQLDialect value) {
        set(1, value);
    }

    /**
     * Getter for <code>MCVE.TEST.DIALECT2</code>.
     */
    public SQLDialect getDialect2() {
        return (SQLDialect) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<SQLDialect, SQLDialect> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestRecord
     */
    public TestRecord() {
        super(Test.TEST);
    }

    /**
     * Create a detached, initialised TestRecord
     */
    public TestRecord(SQLDialect dialect1, SQLDialect dialect2) {
        super(Test.TEST);

        setDialect1(dialect1);
        setDialect2(dialect2);
        resetChangedOnNotNull();
    }
}
